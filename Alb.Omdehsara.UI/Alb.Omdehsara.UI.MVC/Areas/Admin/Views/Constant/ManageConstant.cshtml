
@{
    ViewBag.Title = "ثابت های سایت عمده سرا";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<div class="form-group">
    <label for="Subject">موضوع</label>
    <input type="text" class="form-control" id="Subject" />
</div>
<input type="button" class="btn btn-primary" value="Search" id="Search" />
<br />
<br />
<br />
    <div id="grid"></div>
    @section scripts
{
        <script>
            $(document).ready(function () {
                var filterOption = {
                    extra: false,
                    operators: {
                        string: {
                            eq: "Is Equal To",
                            startswith: "Starts With",
                            contains: "Contains",
                            endswith: "Ends With"
                        }
                    }
                };

                var crudServiceBaseUrl = tools.ajax.apiBaseUrl,
                    dataSource = new kendo.data.DataSource({
                        pageSize: 20,
                        transport: {
                            read: function (options) {
                                tools.ajax.get(tools.ajax.apiBaseUrl + "admin/constant/?pageSize=" + options.data.pageSize + "&pageIndex=" + options.data.page + "&Subject=" + $("#Subject").val()).then(function (data) {
                                    options.success(data);
                                });
                            },
                            update: function (options) {
                                $.ajax({
                                    url: crudServiceBaseUrl + "admin/constant/edit",
                                    type: "PUT",
                                    data: options.data.models[0],
                                    success: function (result) {
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                })
                            },
                            destroy: function (options) {
                                $.ajax({
                                    url: crudServiceBaseUrl + "admin/constant/delete",
                                    type: "DELETE",
                                    data: options.data.models[0],
                                    success: function (result) {
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                })
                            },
                            create: function (options) {
                                $.ajax({
                                    url: crudServiceBaseUrl + "admin/constant/create",
                                    type: "POST",
                                    data: options.data.models[0],
                                    success: function (result) {
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                })
                            },
                            parameterMap: function (options, operation) {
                                if (operation !== "read" && options.models) {
                                    return   options.models[0] ;
                                }
                            }
                        },
                        batch: true,
                        serverPaging: true,
                        serverSorting: true,
                        serverFiltering: true,
                        schema: {
                            data: 'Data',
                            total: function(response) {
                                return response.TotalCount;
                            },
                            model: {
                                id: "ID",
                                fields: {
                                    ID: { editable: true, nullable: false },
                                    Subject: { validation: { required: true } },
                                    Text: { validation: { required: true, min: 1 } },
                                    SortOrder: { validation: { required: false} },
                                    ParentSubject: { validation: { required: false } }
                                }
                            }
                        }
                    });

                $("#grid").kendoGrid({
                    dataSource: dataSource,
                    filterable: false,
                    sortable: true,
                    pageable: true,
                    height: 550,
                   // selectable: "single",
                    toolbar: ["create"],
                    columns: [
                        { field: "ID", title: "کد", width: "50px", filterable: filterOption },
                        { field: "Subject", title: "موضوع", width: "80px", filterable: filterOption },
                        { field: "Text", title: "متن", width: "150px", filterable: false },
                        { field: "ParentSubject", title: "موضوع پدر", width: "120px", filterable: false },
                        { field: "SortOrder", title: "ترتیب", width: "120px", filterable: false },
                        { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }],
                    editable: "inline"
                });
            });
            $("#Search").click(function () {
                var grid = $("#grid").data("kendoGrid");
                grid.dataSource.read();
            });
        </script>
    }
