
@{
    ViewBag.Title = "مدیریت گروه ها";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<input type="text" class="form-control" id="ParentCategoryId" />
<br />
<br />
<input type="button" class="btn btn-primary" value="Search" id="Search" />
<br />
<br />
<br />
    <div id="grid"></div>

<br />
<br />
@*<input type="button" class="btn btn-primary" value="Load Child" onclick="loadChild()" />*@
 @section scripts
{
        <script>
            $(document).ready(function () {
                var crudServiceBaseUrl = tools.ajax.apiBaseUrl,
                    dataSource = new kendo.data.DataSource({
                        pageSize: 50,
                        transport: {
                            read: function (options) {
                                tools.ajax.get(tools.ajax.apiBaseUrl + "admin/category/?pageSize=" + options.data.pageSize + "&pageIndex=" + options.data.page + "&ParentCategoryId=" + $("#ParentCategoryId").val()).then(function (data) {
                                    options.success(data);
                                });
                            },
                            update: function (options) {
                                $.ajax({
                                    url: crudServiceBaseUrl + "admin/category/edit",
                                    type: "PUT",
                                    data: options.data.models[0],
                                    success: function (result) {
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                })
                            },
                            destroy: function (options) {
                                $.ajax({
                                    url: crudServiceBaseUrl + "admin/category/delete",
                                    type: "DELETE",
                                    data: options.data.models[0],
                                    success: function (result) {
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                })
                            },
                            create: function (options) {
                                $.ajax({
                                    url: crudServiceBaseUrl + "admin/category/create",
                                    type: "POST",
                                    data: options.data.models[0],
                                    success: function (result) {
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                })
                            },
                            parameterMap: function (options, operation) {
                                if (operation !== "read" && options.models) {
                                    return   options.models[0] ;
                                }
                            }
                        },
                        batch: true,
                        serverPaging: true,
                        serverSorting: true,
                        schema: {
                            data: 'Data',
                            total: function(response) {
                                return response.TotalCount;
                            },
                            model: {
                                id: "ID",
                                fields: {
                                    ID: { editable: true, nullable: false },
                                    CategoryName: { validation: { required: true } },
                                    Description: { validation: { required: true } },
                                    Enabled: { validation: { required: true } },
                                    Sort: { validation: { required: false } },
                                    CategoryImageUrl: { validation: { required: false } }
                                }
                            }
                        }
                    });

                $("#grid").kendoGrid({
                    dataSource: dataSource,
                    filterable: false,
                    sortable: true,
                    pageable: true,
                    height: 2550,
                    toolbar: ["create"],
                    scrollable: false, 
                    selectable: "single",
                    navigatable: true,
                    columns: [
                        { field: "ID", title: "کد", width: "100px" },
                        { field: "CategoryName", title: "نام گروه", width: "120px" },
                        { field: "Description", title: "توضیحات", width: "150px" },
                        { field: "Enabled", title: "فعال", width: "60px", filterable: false, values: yesNo },
                        { field: "Sort", title: "ترتیب", width: "60px", filterable: false },
                        { field: "IconUrl", title: "آدرس آیکن", width: "250px", filterable: false },
                        { field: "ImageUrl1", title: "آدرس عکس 1", width: "250px", filterable: false },
                        { field: "ImageUrl2", title: "آدرس عکس 2", width: "250px", filterable: false },
                        { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }],
                    editable: "inline",
                    change: function (e) {
                        var selectedRows = this.select();
                        var selectedDataItems = [];
                        for (var i = 0; i < selectedRows.length; i++) {
                            var dataItem = this.dataItem(selectedRows[i]);
                            selectedDataItems.push(dataItem);
                        }
                        $("#ParentCategoryId").val(selectedDataItems[0].ID);
                        //$("#grid").data("kendoGrid").dataSource.read();
                    }
                });
            });

            var yesNo = [{ value: true, text: "بله" }, { value: false, text: "خیر" }];
            loadChild = function () {
                var entityGrid = $("#grid").data("kendoGrid");
                var selectedItem = entityGrid.dataItem(entityGrid.select());
                if (selectedItem != null) {
                }
            }
            $("#Search").click(function () {
                var grid = $("#grid").data("kendoGrid");
                grid.dataSource.read();
            });
                </script>
    }
